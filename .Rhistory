pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(seq(0,1,len=6))
p1(6
)
0xCC0033
0xCC
p1<-colorRampPalette(c("red","yellow"))
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
play()
p1<-colorRampPalette(c("red","blue"))
showMe(p1(20))
nxt()
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.3))
cols<-brewe.pal(3, "BuGn")
cols<-brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
quit()
library(swirl)
swirl()
str(mpg)
qplot(hwy, displ, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
view(myhigh)
head(myhigh)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color="manufacturer")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(drv, hwy, data=mpg, facets= .~drv)
qplot(displ, hwy, data=mpg, facets= .~drv)
play()
qplot(displ, hwy, data=mpg, facets= drv~.)
qplot(displ, hwy, data=mpg, facets= .~.)
qplot(displ, hwy, data=mpg, facets= drv~drv)
qplot(displ, hwy, data=mpg, facets= drv~hwy)
qplot(displ, hwy, data=mpg, facets= .~drv)
nxt()
qplot(hwy, data=mpg, facets= drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets= .~drv)
g <- qplot(mpg, aes=c(displ, hwy))
play()
mpg
g <- qplot(mpg, aes=c(displ, hwy))
g <- ggplot2(mpg, aes=c(displ, hwy))
nxt()
g <- ggplot(mpg, aes=c(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement" ,y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm", se=FALSE)
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy, type="l", ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_lime()
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement" ,y="Hwy Mileage", title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement" ,y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat,price, data=diamonds)
qplot(carat,price, data=diamonds, shape=cut)
qplot(carat,price, data=diamonds, color=cut)
qplot(carat,price, data=diamonds, color=cut, geom_smooth(method = "lm"))
qplot(carat,price, data=diamonds, color=cut)+ geom_smooth(method = "lm")
qplot(carat,price, data=diamonds, color=cut, facets=.~cut)+ geom_smooth(method = "lm")
g<-ggplot(dataset=diamons, aes(depth, print))
g<-ggplot(diamonds, aes(depth, print))
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
rm(list=ls())
dev.off()
quit()
library(swirl)
swirl()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
distxy
plot(hc)
?hclust
plot(as.dendrogram(hc))
play()
plot(hc)
plot(as.dendrogram(hc))
nxt()
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
12
abline(h=12, col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lw=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=c("red","orange","purple"),pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*t(matv)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1 <- svd(dataMatrix)
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,1:2]
svd2[,c(1,2)]
svd2$v[,c(1,2)]
svd2$d
dim(faceData)
a1 <-  (svd1$u[,1] %*% svd1$d[1]) * svd1$v
a1 <-  (svd1$u[,1] %*% svd1$d[1]) * t(svd1$v)
a1 <- svd1$u[,1] %*% t(svd1$v) * svd1$d[1]
a1<- svd1$u[,1] %*% t(svd1$v[1,]) * svd1$d[1]
a1<- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) * svd1$d[1:2]
a1<- svd1$u[,1] %*% diag(svd1$d[1]) %*% t(svd1$v[,1])
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5<- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6)
)
?dist
mdist <- dist(sub1[,1:3])
hclusterring <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[2])
maxCon <- which.max(svd1$v[,2])
?which.max
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab= "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab= "Walkdown Cluster")
quit()
colors()
x<-rnorm(10000)
y<-rnorm(10000)
smoothScatter(x,y)
points(x,y)
smoothScatter(x,y)
points(x,y,alpha=0)
plot(x,y,pch=19)
plot(x,y,pch=19)
plot(x,y,pch=19,col=rgb(0,0,0,0.2))
plot(x,y,pch=19,col=rgb(1,0,0,0.2))
plot(x,y,pch=19,col=rgb(0,0,0,0.1))
plot(x,y,pch=19,col=rgb(0,0,0,0.01))
plot(x,y,pch=19,col=rgb(0,0,0,1))
plot(x,y,pch=19,col=rgb(0,0,0,0.5))
plot(x,y,pch=19,col=rgb(0,0,0,0.05))
plot(x,y,pch=19,col=rgb(0,0,0,0.09))
rm(list=ls())
dev.off()
library(swirl)
swirl()
quit()
?table
?transform
library(swirl)
swirl()
play()
summarize(ssd)
summarise(ssd)
summary(ssd)
dim(ssd)
dim(ssd$activity)
?unique
which.max(ssd$tBodyAcc.mean...Z)
plot(ssd$tBodyAcc.mean...Z)
ssd$tBodyAcc.mean...Z[1]
ssd$tBodyAcc.mean...Z[c(5369:5371)]
quit()
library(swirl)
swirl()
exit()
q()
library(swirl)
swirl()
quit()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
sum(is.na(x0))
mean(is.na(x0))
play()
sum(is.na(x0))/dim(x0)
dim(x0)
str(x0)
length(x0)
sum(is.na(x0))/length(x0)
mean(is.na(x0))
nxt()
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(sum(negative, na.rm=TRUE))
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36, county.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site)
)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0Sub <- pm0sub$Sample.Value
x0Sub <- pm0sub$Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
date0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h=median(x0sub), na.rm=TRUE)
abline(h=median(x0sub, na.rm=TRUE))
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1,x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
range(x0sub, x1sub, na.rm=TRUE)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply( Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply( Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(stat=names(mn0), mean=mn0)
d0 <- data.frame(stat = names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, point(rep(2,52), mrg[,3], xlim=c(.5,2.5)))
with(mrg, point2(rep(2,52), mrg[,3], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3])
)
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x<= mrg$mean.y]
mrg[mrg$mean.x<= mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y, ]
rm(list=ls())
quit()
dir()
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
dim(NEI)
names(NEI)
names(SCC)
dim(SCC)
head(NEI)
fc<-factor(NEI$Pollutant)
dim(fc)
head(fc)
fc<-factor(NEI$year)
head(fc)
quit()
ls
ls()
dir()
dir()
2+2
exit
quit
quit()
2+2
dir()
cd "RepData_PeerAssessment1/"
cwd("RepData_PeerAssessment1/")
setwd("RepData_PeerAssessment1/")
getwd()
dir()
if (!file.exists("data")) { dir.create("data")}
unzip(".activity.zip",exdir="./data")
unzip("./activity.zip",exdir="./data")
AMD_original <- read.csv("data/activity.csv",
header=1,
sep=";",
na.strings="NA"
)
summary(AMD_original)
AMD_original <- read.csv("data/activity.csv",
header=1,
sep=",",
na.strings="NA"
)
AMD_original <- read.csv("data/activity.csv",
header=1,
sep=",",
na.strings="NA"
)
summary(AMD_original)
AMD_woutNA <- AMD_original[!is.na(AMD_original.step)]
AMD_woutNA <- AMD_original[!is.na(AMD_original$steps)]
AMD_woutNA <- AMD_original[!is.na(AMD_original$steps),]
summary(AMD_woutNA)
head(AMD_woutNA)
head(AMD_woutNA,100)
head(AMD_woutNA[order(steps),],100)
head(AMD_woutNA)
AMD_woutNA[order(steps),]
my1 <- AMD_woutNA[order(AMD_woutNA$steps),]
head(my1)
my1 <- AMD_woutNA[order(AMD_woutNA$interval),]
head(my1)
my1 <- AMD_woutNA[order(AMD_woutNA$interval, AMD_woutNA$steps),]
head(my1)
head(my1,100)
my1 <- aggregate(AMD_woutNA, by=steps, FUN=mean)
my1 <- aggregate(AMD_woutNA, by=AMD_woutNA$steps, FUN=mean)
my1 <- aggregate(AMD_woutNA, by=list(steps), FUN=mean)
my1 <- aggregate(AMD_woutNA, by=list(AMD_woutNA$steps), FUN=mean)
warnings
warnings()
head <- my1
rm(head())
rm(head
)
head(my1)
my1 <- aggregate(AMD_woutNA, by=list(AMD_woutNA$date), FUN=mean)
my1 <- aggregate(AMD_woutNA, by=list(AMD_woutNA$date,AMD_woutNA$interval), FUN=mean)
?aggregate
my1 <- aggregate(steps~date, data=AMD_woutNA)
my1 <- aggregate(steps~date, data=AMD_woutNA, FUN=sum)
head(my1)
my2 <- aggregate(steps~date, data=AMD_woutNA, FUN=sum, na.rm=TRUE)
head(my2)
my2 <- aggregate(steps~date, data=AMD_original, FUN=sum, na.rm=TRUE)
head(my2)
head(my2,100)
TotalNumberOfStepsPerDay <- aggregate(steps~date, data=AMD_original, FUN=sum, na.rm=TRUE)
hist(TotalNumberOfStepsPerDay)
my2(1,)
my2[1,1]
as.POSIXct(my2[1,1])
AMD_original$corDate <- as.POSIXct(AMD_original$date)
summary(AMD_original)
View(my1)
head(TotalNumberOfStepsPerDay)
AMD_original$corDate <- as.POSIXct(AMD_original$date)
TotalNumberOfStepsPerDay <- aggregate(steps~corDate, data=AMD_original, FUN=sum, na.rm=TRUE)
head(TotalNumberOfStepsPerDay)
summary(TotalNumberOfStepsPerDay)
AMD_original$corDate <- as.Date(AMD_original$date)
TotalNumberOfStepsPerDay <- aggregate(steps~corDate, data=AMD_original, FUN=sum, na.rm=TRUE)
hist(TotalNumberOfStepsPerDay)
TotalNumberOfStepsPerDay[1,]
AMD_original[1,]
AMD_original$date[1,]
AMD_original$date[1]
AMD_original$date[1]+1
as.Date(AMD_original$date[1])+1
## 100 random dates in a 10-week period
random.dates <- as.Date("2001/1/1") + 70*stats::runif(100)
hist(random.dates, "weeks", format = "%d %b")
weekdays(TotalNumberOfStepsPerDay$corDate)
random.dates
hist(TotalNumberOfStepsPerDay$steps)
plot?
()
mean(TotalNumberOfStepsPerDay$steps)
meadian(TotalNumberOfStepsPerDay$steps)
median(TotalNumberOfStepsPerDay$steps)
abline(v = meadian(TotalNumberOfStepsPerDay$steps), col = "blue", lwd = 2)
abline(v = median(TotalNumberOfStepsPerDay$steps), col = "blue", lwd = 2)
abline(v = mean(TotalNumberOfStepsPerDay$steps), col = "blue", lwd = 2)
abline(v = mean(TotalNumberOfStepsPerDay$steps), col = "blue", lwd = 1)
abline(v = median(TotalNumberOfStepsPerDay$steps), col = "blue", lwd = 1)
mean(TotalNumberOfStepsPerDay$steps)
